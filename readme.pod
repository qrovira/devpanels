=head1 NAME

Mojolicious::Plugin::DevPanels - Debug panels for Mojolicious

=head1 SYNOPSIS

  # Mojolicious
  $self->plugin( 'DevPanels',

    # A data panel, will be displayed using nested lists
    mystash => sub {
      my $c = shift;

      return { key1 => "value1", key2 => "value2" };
    },

    # A raw html panel
    mytemplate => sub {
      my $c = shift;

      return $c->render( 'example/welcome', partial => 1 );
    },

    # Disable one of the default panels
    config => undef,
  );

  # Mojolicious::Lite
  plugin 'DevPanels';

=head1 DESCRIPTION

L<Mojolicious::Plugin::DevPanels> is a L<Mojolicious> development plugin,
that provides an easy way to dump data, structures, or even partial templates
in a panel overlay.

It adds an after_dispatch hook, tries to detect html pages, and injects a
crappy, simple html panel at the end. While this approach is broken by design,
it works for quickly debugging error pages, flash messages, and so on by looking
at the stash / config / session data (see L<DEFAULT PANELS>).

=head1 METHODS

L<Mojolicious::Plugin::DevPanels> inherits all methods from
L<Mojolicious::Plugin> and implements the following new ones.

=head2 register

  $plugin->register(Mojolicious->new);

Register plugin in L<Mojolicious> application.

=head1 DEFAULT PANELS

=over

=item stash

Dump of the stash, excluding keys starting with "mojo." and "config".

=item config

Dump of the configuration

=item session

Dump of the user session

=item log

Dump of the logs, captured the same way as L<Mojolicious::Plugin::ConsoleLogger>

=item mojo_flags

Dump of the "mojo." keys on the stash.

=back

=head1 SEE ALSO

L<Mojolicious>, L<Mojolicious::Guides>, L<http://mojolicio.us>.
L<Mojolicious::Plugin::ConsoleLogger>.

=cut

